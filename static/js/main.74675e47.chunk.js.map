{"version":3,"sources":["common/outsourced.js","components/FormHeading/FormHeading.js","components/LineInput/LineInput.js","components/Button/Button.js","components/GeneralInfo/GeneralInfo.js","components/EntryBreak/EntryBreak.js","components/Education/Education.js","components/MultiLineInput/MultiLineInput.js","components/WorkExp/WorkExp.js","App.js","index.js"],"names":["AnswerObj","answers","saved","newEntry","this","copyAnswerObj","obj","map","a","Object","assign","returnStateObj","newState","stateKey","returnObj","getStateAttr","elem","closest","getAttribute","getEntryOrder","parseInt","FormHeading","props","title","className","LineInput","labelJsx","label","inputValue","type","value","inputkey","onChange","inputChange","required","Button","buttonClick","hasOwnProperty","clickFunc","buttonClass","additionalClass","buttonType","onClick","buttonText","GeneralInfo","answerData","data","state","onSubmit","sectionSaveEdit","grouporder","name","email","phone","EntryBreak","Education","entries","answer","key","inputObj","savedLineInput","length","school","course","dateFrom","dateTo","deleteEntry","toString","buttonsContainer","MultiLineInput","rows","WorkExp","employer","jobTitle","mainTasks","App","generalInfo","education","jobs","bind","event","setState","target","entryOrder","inputKey","preventDefault","newEntryObj","push","splice","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.74675e47.chunk.js","sourcesContent":["function AnswerObj(answers = [], saved = false, newEntry = false) {\n  this.answers = answers;\n  this.saved = saved;\n  this.newEntry = newEntry;\n}\n\nconst copyAnswerObj = (obj) => {\n  let newObj = new AnswerObj(\n    obj.answers.map((a) => Object.assign({}, a)),\n    obj.saved,\n    obj.newEntry\n  );\n  return newObj;\n};\n\nconst returnStateObj = (newState, stateKey) => {\n  let returnObj = {};\n  returnObj[stateKey] = newState;\n  return returnObj;\n};\n\nconst getStateAttr = (elem) => {\n  return elem.closest(\"form\").getAttribute(\"state\");\n};\n\nconst getEntryOrder = (elem) => {\n  return parseInt(\n    elem.closest(\".group-order-indicator\").getAttribute(\"grouporder\")\n  );\n};\n\nexport {\n  AnswerObj,\n  copyAnswerObj,\n  returnStateObj,\n  getStateAttr,\n  getEntryOrder,\n};\n","import \"./FormHeading.scss\";\n\nconst FormHeading = (props) => {\n  return (\n    <div>\n      <h2>{props.title}</h2>\n      <div className=\"line-break\"></div>\n    </div>\n  );\n};\n\nexport default FormHeading;\n","import \"./LineInput.scss\";\n\nconst LineInput = (props) => {\n  let labelJsx = <label className=\"regular-font-size\">{props.label}</label>;\n\n  return props.saved ? (\n    <div className=\"form-question\">\n      {labelJsx}\n      <span className=\"regular-font-size\">{props.inputValue}</span>\n    </div>\n  ) : (\n    <div className=\"form-question\">\n      {labelJsx}\n      <input\n        type={props.type}\n        className=\"hover-highlight regular-font-size border-radius border-width\"\n        value={props.inputValue}\n        inputkey={props.inputkey}\n        onChange={props.inputChange}\n        required\n      />\n    </div>\n  );\n};\n\nexport default LineInput;\n","import \"./Button.scss\";\n\nconst Button = (props) => {\n  let buttonClick = props.hasOwnProperty(\"clickFunc\")\n    ? props.clickFunc\n    : () => {};\n\n  let buttonClass = \"btn border-radius border-width regular-font-size \";\n\n  buttonClass += props.hasOwnProperty(\"additionalClass\")\n    ? props.additionalClass\n    : \"normal\";\n\n  return (\n    <button\n      className={buttonClass}\n      type={props.buttonType}\n      onClick={buttonClick}\n    >\n      {props.buttonText}\n    </button>\n  );\n};\n\nexport default Button;\n","import FormHeading from \"../FormHeading/FormHeading.js\";\nimport LineInput from \"../LineInput/LineInput.js\";\nimport Button from \"../Button/Button.js\";\n\nconst GeneralInfo = (props) => {\n  let answerData = props.data.answers[0];\n\n  return (\n    <form state=\"generalInfo\" onSubmit={props.sectionSaveEdit}>\n      <FormHeading title=\"General Info\" />\n      <div className=\"group-order-indicator\" grouporder=\"0\" key=\"0\">\n        <LineInput\n          label=\"Name\"\n          inputkey=\"name\"\n          inputValue={answerData.name}\n          type=\"text\"\n          inputChange={props.inputChange}\n          saved={props.data.saved}\n        />\n        <LineInput\n          label=\"Email\"\n          inputkey=\"email\"\n          type=\"email\"\n          inputChange={props.inputChange}\n          inputValue={answerData.email}\n          saved={props.data.saved}\n        />\n        <LineInput\n          label=\"Phone number\"\n          inputkey=\"phone\"\n          type=\"number\"\n          inputChange={props.inputChange}\n          inputValue={answerData.phone}\n          saved={props.data.saved}\n        />\n        <div className=\"buttons-container\">\n          <Button\n            buttonText={props.data.saved ? \"Edit\" : \"Save\"}\n            buttonType=\"submit\"\n          />\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default GeneralInfo;\n","import \"./EntryBreak.scss\";\n\nconst EntryBreak = () => {\n  return <div className=\"entry-break\"></div>;\n};\n\nexport default EntryBreak;\n","import FormHeading from \"../FormHeading/FormHeading.js\";\nimport Button from \"../Button/Button.js\";\nimport LineInput from \"../LineInput/LineInput.js\";\nimport EntryBreak from \"../EntryBreak/EntryBreak.js\";\n\nconst Education = (props) => {\n  let entries = props.data.answers.map((answer, key) => {\n    let inputObj = props.data.answers[key];\n    let savedLineInput =\n      props.data.saved &&\n      !(props.data.newEntry && key + 1 === props.data.answers.length);\n\n    return (\n      <div\n        className=\"group-order-indicator\"\n        grouporder={key}\n        key={key.toString() + \"-education\"}\n      >\n        {key > 0 && <EntryBreak />}\n        <LineInput\n          label=\"School name\"\n          inputkey=\"school\"\n          type=\"text\"\n          inputChange={props.inputChange}\n          inputValue={inputObj.school}\n          saved={savedLineInput}\n        />\n        <LineInput\n          label=\"Course name\"\n          inputkey=\"course\"\n          type=\"text\"\n          inputChange={props.inputChange}\n          inputValue={inputObj.course}\n          saved={savedLineInput}\n        />\n        <LineInput\n          label=\"Date from\"\n          inputkey=\"dateFrom\"\n          type=\"date\"\n          inputChange={props.inputChange}\n          inputValue={inputObj.dateFrom}\n          saved={savedLineInput}\n        />\n        <LineInput\n          label=\"Date to\"\n          inputkey=\"dateTo\"\n          type=\"date\"\n          inputChange={props.inputChange}\n          inputValue={inputObj.dateTo}\n          saved={savedLineInput}\n        />\n        {!props.data.newEntry && !props.data.saved && (\n          <div className=\"buttons-container\">\n            <Button\n              buttonText=\"Delete\"\n              buttonType=\"button\"\n              clickFunc={props.deleteEntry}\n              additionalClass=\"danger\"\n            />\n          </div>\n        )}\n      </div>\n    );\n  });\n\n  let buttonsContainer =\n    props.data.answers.length === 0 ? (\n      <div className=\"buttons-container\">\n        <Button\n          buttonText=\"Add\"\n          buttonType=\"button\"\n          clickFunc={props.newEntry}\n        />\n      </div>\n    ) : props.data.newEntry || !props.data.saved ? (\n      <div className=\"buttons-container\">\n        <Button buttonText=\"Save\" buttonType=\"submit\" />\n      </div>\n    ) : (\n      <div className=\"buttons-container\">\n        <Button buttonText=\"Edit\" buttonType=\"submit\" />\n        <div></div>\n        <Button\n          buttonText=\"Add\"\n          buttonType=\"button\"\n          clickFunc={props.newEntry}\n        />\n      </div>\n    );\n\n  return (\n    <form state=\"education\" onSubmit={props.sectionSaveEdit}>\n      <FormHeading title=\"Education\" />\n      {entries}\n      {buttonsContainer}\n    </form>\n  );\n};\n\nexport default Education;\n","import \"./MultiLineInput.scss\";\n\nconst MultiLineInput = (props) => {\n  let labelJsx = <label className=\"regular-font-size\">{props.label}</label>;\n\n  return props.saved ? (\n    <div className=\"textarea-question\">\n      {labelJsx}\n      <span className=\"regular-font-size\">{props.inputValue}</span>\n    </div>\n  ) : (\n    <div className=\"textarea-question\">\n      {labelJsx}\n      <textarea\n        className=\"hover-highlight regular-font-size border-radius border-width\"\n        rows=\"4\"\n        value={props.inputValue}\n        inputkey={props.inputkey}\n        onChange={props.inputChange}\n        required\n      />\n    </div>\n  );\n};\n\nexport default MultiLineInput;\n","import FormHeading from \"../FormHeading/FormHeading.js\";\nimport Button from \"../Button/Button.js\";\nimport LineInput from \"../LineInput/LineInput.js\";\nimport MultiLineInput from \"../MultiLineInput/MultiLineInput.js\";\nimport EntryBreak from \"../EntryBreak/EntryBreak.js\";\n\nconst WorkExp = (props) => {\n  let entries = props.data.answers.map((answer, key) => {\n    let inputObj = props.data.answers[key];\n    let savedLineInput =\n      props.data.saved &&\n      !(props.data.newEntry && key + 1 === props.data.answers.length);\n\n    return (\n      <div\n        className=\"group-order-indicator\"\n        grouporder={key}\n        key={key.toString() + \"-job\"}\n      >\n        {key > 0 && <EntryBreak />}\n        <LineInput\n          label=\"Company name\"\n          inputkey=\"employer\"\n          type=\"text\"\n          inputChange={props.inputChange}\n          inputValue={inputObj.employer}\n          saved={savedLineInput}\n        />\n        <LineInput\n          label=\"Job title\"\n          inputkey=\"jobTitle\"\n          type=\"text\"\n          inputChange={props.inputChange}\n          inputValue={inputObj.jobTitle}\n          saved={savedLineInput}\n        />\n        <MultiLineInput\n          label=\"Main responsibilities\"\n          inputkey=\"mainTasks\"\n          inputChange={props.inputChange}\n          inputValue={inputObj.mainTasks}\n          saved={savedLineInput}\n        />\n        <LineInput\n          label=\"Date from\"\n          inputkey=\"dateFrom\"\n          type=\"date\"\n          inputChange={props.inputChange}\n          inputValue={inputObj.dateFrom}\n          saved={savedLineInput}\n        />\n        <LineInput\n          label=\"Date to\"\n          inputkey=\"dateTo\"\n          type=\"date\"\n          inputChange={props.inputChange}\n          inputValue={inputObj.dateTo}\n          saved={savedLineInput}\n        />\n        {!props.data.newEntry && !props.data.saved && (\n          <div className=\"buttons-container\">\n            <Button\n              buttonText=\"Delete\"\n              buttonType=\"button\"\n              clickFunc={props.deleteEntry}\n              additionalClass=\"danger\"\n            />\n          </div>\n        )}\n      </div>\n    );\n  });\n\n  let buttonsContainer =\n    props.data.answers.length === 0 ? (\n      <div className=\"buttons-container\">\n        <Button\n          buttonText=\"Add\"\n          buttonType=\"button\"\n          clickFunc={props.newEntry}\n        />\n      </div>\n    ) : props.data.newEntry || !props.data.saved ? (\n      <div className=\"buttons-container\">\n        <Button buttonText=\"Save\" buttonType=\"submit\" />\n      </div>\n    ) : (\n      <div className=\"buttons-container\">\n        <Button buttonText=\"Edit\" buttonType=\"submit\" />\n        <div></div>\n        <Button\n          buttonText=\"Add\"\n          buttonType=\"button\"\n          clickFunc={props.newEntry}\n        />\n      </div>\n    );\n\n  return (\n    <form state=\"jobs\" onSubmit={props.sectionSaveEdit}>\n      <FormHeading title=\"Work Experience\" />\n      {entries}\n      {buttonsContainer}\n    </form>\n  );\n};\n\nexport default WorkExp;\n","import React, { Component } from \"react\";\nimport \"./App.scss\";\n\nimport {\n  AnswerObj,\n  copyAnswerObj,\n  returnStateObj,\n  getStateAttr,\n  getEntryOrder,\n} from \"./common/outsourced.js\";\n\nimport GeneralInfo from \"./components/GeneralInfo/GeneralInfo.js\";\nimport Education from \"./components/Education/Education.js\";\nimport WorkExp from \"./components/WorkExp/WorkExp.js\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      generalInfo: new AnswerObj([{ name: \"\", email: \"\", phone: \"\" }]),\n      education: new AnswerObj(),\n      jobs: new AnswerObj(),\n    };\n\n    this.inputChange = this.inputChange.bind(this);\n    this.sectionSaveEdit = this.sectionSaveEdit.bind(this);\n    this.newEntry = this.newEntry.bind(this);\n    this.deleteEntry = this.deleteEntry.bind(this);\n  }\n\n  inputChange(event) {\n    this.setState((state) => {\n      let stateKey = getStateAttr(event.target);\n      let entryOrder = getEntryOrder(event.target);\n      let inputKey = event.target.getAttribute(\"inputkey\");\n\n      let newState = copyAnswerObj(state[stateKey]);\n\n      newState.answers[entryOrder][inputKey] = event.target.value;\n\n      return returnStateObj(newState, stateKey);\n    });\n  }\n\n  sectionSaveEdit(event) {\n    event.preventDefault();\n\n    this.setState((state) => {\n      let stateKey = getStateAttr(event.target);\n\n      let newState = copyAnswerObj(state[stateKey]);\n\n      if (newState.newEntry) {\n        newState.newEntry = false;\n        newState.saved = true;\n      } else {\n        newState.saved = !newState.saved;\n      }\n\n      return returnStateObj(newState, stateKey);\n    });\n  }\n\n  newEntry(event) {\n    this.setState((state) => {\n      let stateKey = getStateAttr(event.target);\n\n      let newState = copyAnswerObj(state[stateKey]);\n      newState.newEntry = true;\n\n      let newEntryObj =\n        stateKey === \"education\"\n          ? {\n              school: \"\",\n              course: \"\",\n              dateFrom: \"\",\n              dateTo: \"\",\n            }\n          : {\n              employer: \"\",\n              jobTitle: \"\",\n              mainTasks: \"\",\n              dateFrom: \"\",\n              dateTo: \"\",\n            };\n\n      newState.answers.push(newEntryObj);\n\n      return returnStateObj(newState, stateKey);\n    });\n  }\n\n  deleteEntry(event) {\n    this.setState((state) => {\n      let stateKey = getStateAttr(event.target);\n      let entryOrder = getEntryOrder(event.target);\n\n      let newState = copyAnswerObj(state[stateKey]);\n\n      newState.answers.splice(entryOrder, 1);\n\n      return returnStateObj(newState, stateKey);\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"form-container\">\n        <div className=\"form-heading-container\">\n          <h1>Job Application Form</h1>\n        </div>\n        <div className=\"form-body-container\">\n          <GeneralInfo\n            data={this.state.generalInfo}\n            inputChange={this.inputChange}\n            sectionSaveEdit={this.sectionSaveEdit}\n          />\n          <Education\n            data={this.state.education}\n            inputChange={this.inputChange}\n            sectionSaveEdit={this.sectionSaveEdit}\n            newEntry={this.newEntry}\n            deleteEntry={this.deleteEntry}\n          />\n          <WorkExp\n            data={this.state.jobs}\n            inputChange={this.inputChange}\n            sectionSaveEdit={this.sectionSaveEdit}\n            newEntry={this.newEntry}\n            deleteEntry={this.deleteEntry}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}